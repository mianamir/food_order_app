{"ast":null,"code":"var _jsxFileName = \"/Users/amirarif/Documents/javascript/reactjs/udemy/food_order_app/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\"; // due to complex state using this\n\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/amirarif/Documents/javascript/reactjs/udemy/food_order_app/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","existingCartItemIndex","findIndex","id","existingCartItem","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B,C,CAAoC;;AACpC,OAAOC,WAAP,MAAwB,gBAAxB;;AAGA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAEnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA0B;AACtB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AAEA,UAAMC,qBAAqB,GAAGN,KAAK,CAACH,KAAN,CAAYU,SAAZ,CACzBF,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACI,IAAP,CAAYG,EADR,CAA9B;AAIA,UAAMC,gBAAgB,GAAGT,KAAK,CAACH,KAAN,CAAYS,qBAAZ,CAAzB;AAGA,UAAMI,kBAAkB,GAAGV,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYM,KAAZ,GAAoBV,MAAM,CAACI,IAAP,CAAYO,MAA/E;AAEA,WAAO;AACHf,MAAAA,KAAK,EAAEM,YADJ;AAEHL,MAAAA,WAAW,EAAEY;AAFV,KAAP;AAIH;;AAED,SAAOd,gBAAP;AACH,CArBD;;AAuBA,MAAMiB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCtB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAIA,QAAMqB,oBAAoB,GAAGZ,IAAI,IAAI;AACjCW,IAAAA,kBAAkB,CAAC;AACfd,MAAAA,IAAI,EAAE,KADS;AAEfG,MAAAA,IAAI,EAAEA;AAFS,KAAD,CAAlB;AAIH,GALD;;AAOA,QAAMa,yBAAyB,GAAGV,EAAE,IAAI;AACpCQ,IAAAA,kBAAkB,CAAC;AACfd,MAAAA,IAAI,EAAE,QADS;AAEfM,MAAAA,EAAE,EAAEA;AAFW,KAAD,CAAlB;AAIH,GALD;;AASA,QAAMW,WAAW,GAAG;AAChBtB,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KADD;AAEhBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAFP;AAGhBsB,IAAAA,OAAO,EAACH,oBAHQ;AAIhBI,IAAAA,UAAU,EAACH;AAJK,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACFL,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAhCD;;GAAMT,Y;;KAAAA,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\"; // due to complex state using this\nimport CartContext from \"./cart-context\";\n\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n\n    if (action.type === 'ADD'){\n        const updatedItems = state.items.concat(action.item);\n\n        const existingCartItemIndex = state.items.findIndex(\n            (item) => item.id === action.item.id\n        );\n\n        const existingCartItem = state.items[existingCartItemIndex];\n\n\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        \n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n    }\n\n    return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n\n\n    const addItemToCartHandler = item => {\n        dispatchCartAction({\n            type: 'ADD', \n            item: item\n        });\n    };\n\n    const removeItemFromCartHandler = id => {\n        dispatchCartAction({\n            type: 'REMOVE',\n            id: id\n        });\n    };\n\n\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem:addItemToCartHandler,\n        removeItem:removeItemFromCartHandler\n    };\n\n    return <CartContext.Provider value={cartContext}>\n        {props.children}\n    </CartContext.Provider>;\n};\n\n\nexport default CartProvider;\n\n"]},"metadata":{},"sourceType":"module"}