{"ast":null,"code":"var _jsxFileName = \"/Users/amirarif/Documents/javascript/reactjs/udemy/food_order_app/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\"; // due to complex state using this\n\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  } // ADD item function ends\n\n\n  if (action.type === 'REMOVE') {\n    const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n  } // REMOVE item function ends\n\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/amirarif/Documents/javascript/reactjs/udemy/food_order_app/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\"; // due to complex state using this\nimport CartContext from \"./cart-context\";\n\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n\n    if (action.type === 'ADD'){\n\n        const updatedTotalAmount = \n        state.totalAmount + action.item.price * action.item.amount;\n        \n\n        const existingCartItemIndex = state.items.findIndex(\n            (item) => item.id === action.item.id\n        );\n\n        const existingCartItem = state.items[existingCartItemIndex];\n\n        let updatedItems;\n\n        if (existingCartItem) {\n            const updatedItem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + action.item.amount,\n            };\n\n            updatedItems = [...state.items];\n\n            updatedItems[existingCartItemIndex] = updatedItem;\n\n        } else {\n            updatedItems = state.items.concat(action.item);\n        }\n\n        \n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount,\n        };\n    } // ADD item function ends\n\n    if (action.type === 'REMOVE'){\n\n        const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n\n        const existingCartItemIndex = state.items.findIndex(\n            (item) => item.id === action.item.id\n        );\n\n        const existingCartItem = state.items[existingCartItemIndex];\n\n\n\n\n\n    } // REMOVE item function ends\n\n    return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n\n\n    const addItemToCartHandler = item => {\n        dispatchCartAction({\n            type: 'ADD', \n            item: item\n        });\n    };\n\n    const removeItemFromCartHandler = id => {\n        dispatchCartAction({\n            type: 'REMOVE',\n            id: id\n        });\n    };\n\n\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem:addItemToCartHandler,\n        removeItem:removeItemFromCartHandler\n    };\n\n    return <CartContext.Provider value={cartContext}>\n        {props.children}\n    </CartContext.Provider>;\n};\n\n\nexport default CartProvider;\n\n"]},"metadata":{},"sourceType":"module"}