{"ast":null,"code":"var _jsxFileName = \"/Users/amirarif/Documents/javascript/reactjs/udemy/food_order_app/src/components/Meals/MealItem/MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport Input from '../../UI/Input';\nimport classes from './MealItemForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MealItemForm = props => {\n  _s();\n\n  /**\n   * Refs make it possible to access DOM nodes directly within React. \n   * This comes in handy in situations where, just as one example, \n   * you want to change the child of a component.\n   * \n   */\n  const amountInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value; // always string value\n    // type cast from str to int \n\n    const enteredAmountNumber = +enteredAmount;\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      label: \"Amount\",\n      ref: amountInputRef,\n      input: {\n        id: 'amount_' + props.id,\n        // this changed!\n        type: 'number',\n        min: '1',\n        'max': 5,\n        'step': 1,\n        'defaultValue': '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MealItemForm, \"7cHUJdJWd3tefBlPVbYdC5gY/1U=\");\n\n_c = MealItemForm;\nexport default MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["/Users/amirarif/Documents/javascript/reactjs/udemy/food_order_app/src/components/Meals/MealItem/MealItemForm.js"],"names":["React","useRef","useState","Input","classes","MealItemForm","props","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","form","id","type","min"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B;AACJ;AACA;AACA;AACA;AACA;AACI,QAAMC,cAAc,GAAGN,MAAM,EAA7B;;AAEA,QAAMO,aAAa,GAAGC,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C,CAH2B,CAGyB;AACpD;;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B;;AAEA,QACIA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IACAF,mBAAmB,GAAG,CADtB,IAEAA,mBAAmB,GAAG,CAH1B,EAIK;AACG;AAEP;AAGJ,GAjBD;;AAmBA,sBACI;AAAM,IAAA,SAAS,EAAEV,OAAO,CAACa,IAAzB;AAA+B,IAAA,QAAQ,EAAET,aAAzC;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,QAAb;AACA,MAAA,GAAG,EAAGD,cADN;AAEA,MAAA,KAAK,EAAE;AACHW,QAAAA,EAAE,EAAE,YAAYZ,KAAK,CAACY,EADnB;AACuB;AAC1BC,QAAAA,IAAI,EAAE,QAFH;AAGHC,QAAAA,GAAG,EAAE,GAHF;AAIH,eAAO,CAJJ;AAKH,gBAAQ,CALL;AAMH,wBAAgB;AANb;AAFP;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA3CD;;GAAMf,Y;;KAAAA,Y;AA8CN,eAAeA,YAAf","sourcesContent":["import React, { useRef, useState } from 'react';\n\nimport Input from '../../UI/Input';\nimport classes from './MealItemForm.module.css';\n\n\nconst MealItemForm = (props) => {\n    /**\n     * Refs make it possible to access DOM nodes directly within React. \n     * This comes in handy in situations where, just as one example, \n     * you want to change the child of a component.\n     * \n     */\n    const amountInputRef = useRef();\n\n    const submitHandler = event => {\n        event.preventDefault();\n\n        const enteredAmount = amountInputRef.current.value; // always string value\n        // type cast from str to int \n        const enteredAmountNumber = +enteredAmount;\n\n        if (\n            enteredAmount.trim().length === 0 || \n            enteredAmountNumber < 1 || \n            enteredAmountNumber > 5\n            ){\n                return;\n            \n        }\n\n        \n    };\n\n    return (\n        <form className={classes.form} onSubmit={submitHandler}>\n            <Input label=\"Amount\" \n            ref= {amountInputRef} \n            input={{\n                id: 'amount_' + props.id, // this changed!\n                type: 'number',\n                min: '1',\n                'max': 5,\n                'step': 1,\n                'defaultValue': '1'\n            }}/>\n            <button>+ Add</button>\n    </form>\n    );\n};\n\n\nexport default MealItemForm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}